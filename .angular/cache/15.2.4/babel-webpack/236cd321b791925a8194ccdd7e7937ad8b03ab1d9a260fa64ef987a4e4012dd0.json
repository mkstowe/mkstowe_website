{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/platform-browser\";\nexport let PreAlphaIIComponent = /*#__PURE__*/(() => {\n  class PreAlphaIIComponent {\n    constructor(titleService) {\n      this.titleService = titleService;\n      this.titleService.setTitle(\"Michael Stowe | Project Cloud\");\n    }\n    ngOnInit() {}\n  }\n  PreAlphaIIComponent.ɵfac = function PreAlphaIIComponent_Factory(t) {\n    return new (t || PreAlphaIIComponent)(i0.ɵɵdirectiveInject(i1.Title));\n  };\n  PreAlphaIIComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PreAlphaIIComponent,\n    selectors: [[\"app-pre-alpha-ii\"]],\n    decls: 44,\n    vars: 0,\n    consts: [[1, \"content\"], [1, \"is-bold\"], [1, \"seg\"], [1, \"blog_topic\"], [\"src\", \"../../../../assets/img/cloud/revenge.gif\"]],\n    template: function PreAlphaIIComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n        i0.ɵɵtext(2, \"Pre-Alpha II\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"h3\", 3)(5, \"strong\");\n        i0.ɵɵtext(6, \"Skill System\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"p\");\n        i0.ɵɵtext(8, \"The first thing I worked on for this sprint was collaborating with one of my fellow programmers to get a common skill system going so that everything is consistent between Strength, Agility, and Perception skills. We discussed numerous different designs to try to maximize ease of use while also keeping all of our scripts and game object clean and tidy. Once we decided on how we were going to do it, I set it all up using the existing skill manager script written previously, and got the first of the strangth skills underway.\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 2)(10, \"h3\", 3)(11, \"strong\");\n        i0.ɵɵtext(12, \"Revenge Skill\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"p\");\n        i0.ɵɵtext(14, \"The first of the strength skills that the player can unlock is Revenge. This allows the player to prioritize close-quarters combat in a way that is not too deadly. Every time the player takes damage, they increase an amount of charge to be used toward their Revenge skill. When activating the skill, a set proportion of the charge is used and multiplied to reflect damage back to all enemies within range. This means that the more damage the player takes, the more damage (and larger range) they can inflict back to their enemies.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"p\");\n        i0.ɵɵtext(16, \"Part of the process of getting the functionality for this skill up and running was to utilize the EventBus script to publish certain events from some scripts, and subscribe to them in others so that all of the scripts could communicate without being coupled together - using the Pub/Sub design pattern.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"img\", 4);\n        i0.ɵɵelementStart(18, \"p\");\n        i0.ɵɵtext(19, \"Like before, I worked with one of the VFX artists to implement their art into the script so that it is more apparent and satisfying to the player when they use their ability.\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"div\", 2)(21, \"h3\", 3)(22, \"strong\");\n        i0.ɵɵtext(23, \"Equipment System\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(24, \"p\");\n        i0.ɵɵtext(25, \"Next up, I created an equipment system so that, like the skill system, all of the player's equipment functionality is organized and consistent across scripts. To do this, I heavily referenced the skill manager and skill system mentioned previously, and rewrote parts to cater it more specifically to the player's equipment/inventory needs.\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(26, \"div\", 2)(27, \"h3\", 3)(28, \"strong\");\n        i0.ɵɵtext(29, \"Blademail\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(30, \"p\");\n        i0.ɵɵtext(31, \"The first piece of equipment for the player to obtain is Blademail. This is relatively similar to the Revenge skill, but with some key differences. When they player activates their Blademail, a portion of any incoming damage is automatically reflected back to the enemy that dealt it for a given duration. Unlike Revenge, this only affects the enemy that deals the damage, rather than all enemies in range. Additionally, there is no charging system like with Revenge. The damage reflected relies on the amount of damage received.\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(32, \"div\", 2)(33, \"h3\", 3)(34, \"strong\");\n        i0.ɵɵtext(35, \"Grapple\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(36, \"p\");\n        i0.ɵɵtext(37, \"The most time-consuming task of this sprint was the grapple ability. This is a more advanced platforming mechanic available to the player that allows them to \\\"throw\\\" a grappling hook toward a surface, and if they hit it, the player then begins moving toward that point. Implementing this mechanic involved a lot of research on the different physics-based approaches in Unity. In my experience, dealing with physics in Unity often leads to some unexpected bugs, and that was certainly the case here. After working with it for a while, though, I was able to get something that works pretty well!\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(38, \"div\", 2)(39, \"h3\", 3)(40, \"strong\");\n        i0.ɵɵtext(41, \"Debugging\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(42, \"p\");\n        i0.ɵɵtext(43, \"Lastly, I spent a chunk of time fixing bugs that either I discovered, or were brought to my attention by others. Using a fix discovered by another programmer, I was finally able to get the grounding issues on my air-based mechanics fixed. I also swapped a bit of logic in some scripts out with Pub/Sub implementations to clean everything up.\");\n        i0.ɵɵelementEnd()()();\n      }\n    },\n    styles: [\"img[_ngcontent-%COMP%]{display:block;width:50%;margin:0 auto}@media screen and (max-width: 950px){img[_ngcontent-%COMP%]{width:100%}video[_ngcontent-%COMP%]{width:100%}}\"]\n  });\n  return PreAlphaIIComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}